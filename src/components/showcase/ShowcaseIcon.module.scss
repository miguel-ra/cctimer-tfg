@use "styles/palette";
@use "styles/colors";
@use "styles/transition";

.showcaseIcon {
  width: 3.5rem;
  cursor: pointer;
  height: 3.5rem;
  display: flex;
  position: relative;
  user-select: none;
  outline: none;
  --background-color: #{palette.get("background.secondary")};
  -webkit-tap-highlight-color: transparent;

  path,
  circle,
  rect {
    transition: transition.generate(color);
  }

  &.selected {
    .iconBorder {
      color: palette.get("text.secondary");
      opacity: 1;
      transform: scale(1.322);
    }
    .iconDelete {
      color: palette.get("text.secondary");
    }
  }

  &:hover,
  &:focus-within {
    .iconBorder {
      opacity: 1;
      transform: scale(1.322);
    }
  }

  &:focus {
    .iconBorder {
      color: colors.get("blue.main");
    }
  }

  &:hover .iconDelete,
  &[aria-expanded="true"] .iconDelete,
  &:focus-within .iconDelete {
    display: block;
  }
}

.iconBorder {
  top: 0;
  left: 0;
  color: palette.get("border.secondary");
  width: 100%;
  height: 100%;
  opacity: 0;
  position: absolute;
  transform: scale(1.1);
  transition: transition.generate(opacity, color), transform 0.25s ease-in-out;
}

.icon {
  width: 100%;
  height: 100%;
}

.iconDelete {
  top: 0;
  color: palette.get("border.secondary");
  right: 0;
  width: 20px;
  display: none;
  opacity: 0;
  position: absolute;
  animation: reveal 0.2s ease-in-out forwards;
  transform: translate(50%, -45%);
  transition: transition.generate(color, transform);
  animation-delay: 0.2s;
  &:hover,
  &:focus {
    transform: translate(50%, -45%) scale(1.15);
  }
}

@keyframes reveal {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
